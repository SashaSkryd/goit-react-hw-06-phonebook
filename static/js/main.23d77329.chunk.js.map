{"version":3,"sources":["Components/Alert/alert.module.css","Components/Title/title.module.css","Container/animation/titleAnimation.module.css","Container/App.module.css","Components/ContactForm/ContactForm.module.css","Components/ContactList/ContactList.module.css","redux/actions/actions.js","Components/Alert/alert.js","Components/ContactForm/ContactForm.jsx","Components/Filter/Filter.jsx","Components/ContactList/ContactList.jsx","Components/Title/Title.js","Container/App.js","redux/reducers/reducer.js","redux/store.js","index.js","Components/Filter/Filter.module.css"],"names":["module","exports","addContact","createAction","removeContact","filterContact","AlertMessage","children","className","classes","alertMessage","INITIAL_STATE","name","number","ContactForm","state","handleChange","event","target","value","setState","handleSubmit","preventDefault","props","contacts","find","item","isExists","setTimeout","reset","this","onSubmit","style","form","title","type","placeholder","onChange","input","btn","btnText","CSSTransition","in","timeout","classNames","unmountOnExit","Component","mapDispatchToProps","connect","filterRender","filter","visibleFilter","length","container","e","deleteItem","array","contact","toLowerCase","includes","TransitionGroup","component","list","map","listItem","deskription","onClick","id","App","appear","animation","unmountOnExid","Title","initialState","JSON","parse","localStorage","getItem","createContactsReducer","createReducer","actions","payload","shortid","generate","createFilterReducer","store","configureStore","reducer","subscribe","setItem","stringify","getState","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.23d77329.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"alertMessage\":\"alert_alertMessage__2s2-O\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"title\":\"title_title__XZde2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"appear\":\"titleAnimation_appear__2-wH5\",\"appearActive\":\"titleAnimation_appearActive__2deXb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__1O0Gl\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"ContactForm_form__1HYJI\",\"title\":\"ContactForm_title__X-168\",\"btn\":\"ContactForm_btn__1Fo-F\",\"btnText\":\"ContactForm_btnText__elCEz\",\"input\":\"ContactForm_input__2gOrX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"listItem\":\"ContactList_listItem__2RX_y\",\"deskription\":\"ContactList_deskription__RFaov\",\"list\":\"ContactList_list__3QU3W\",\"btn\":\"ContactList_btn__3kSGk\",\"btnText\":\"ContactList_btnText__dWpHx\"};","// Wihhout Toolkit\r\n// import {ADD_CONTACT, REMOVE_CONTACT, CHANGE_FILTER} from '../actionsTypes.js'\r\n\r\n// export const addContact = (contact) => ({\r\n//     type: ADD_CONTACT,\r\n//     payload: contact,\r\n// })\r\n\r\n// export const removeContact = (id) => ({\r\n//      type: REMOVE_CONTACT,\r\n//     payload: id,\r\n// })\r\n\r\n// export const filterContact = (filter) => ({\r\n//     type: CHANGE_FILTER,\r\n//     payload: filter,\r\n// })\r\nimport { createAction } from '@reduxjs/toolkit'\r\n\r\nconst addContact = createAction('ADD_CONTACT')\r\nconst removeContact = createAction('REMOVE_CONTACT')\r\nconst filterContact = createAction('CHANGE_FITER')\r\n\r\nexport {addContact,removeContact,filterContact}","import React from 'react';\r\n\r\nimport classes from './alert.module.css';\r\n\r\nexport default function AlertMessage({ children }) {\r\n  return <div className={classes.alertMessage}>{children}</div>;\r\n}","import React, { Component } from \"react\"\r\nimport style from \"./ContactForm.module.css\"\r\nimport { addContact } from \"../../redux/actions/actions.js\"\r\nimport { connect } from \"react-redux\"\r\nimport AlertMessage from \"../Alert/alert.js\"\r\n\r\nimport { CSSTransition } from \"react-transition-group\"\r\nimport \"../../Container/animation/alertAnimation.css\"\r\n\r\nconst INITIAL_STATE = { name: \"\", number: \"\" }\r\n\r\nclass ContactForm extends Component {\r\n  state = {\r\n    ...INITIAL_STATE,\r\n  }\r\n\r\n  handleChange = (event) => {\r\n    const { name, value } = event.target\r\n    this.setState({ [name]: value })\r\n  }\r\n\r\n  handleSubmit = (event) => {\r\n    event.preventDefault()\r\n\r\n    if (this.props.contacts.find((item) => item.name === this.state.name)) {\r\n      this.setState({ isExists: true })\r\n\r\n      setTimeout(() => {\r\n        this.setState({ isExists: false })\r\n      }, 1500)\r\n    } else {\r\n      this.props.addContact(this.state)\r\n    }\r\n\r\n    this.reset()\r\n  }\r\n\r\n  reset = () => {\r\n    this.setState({ ...INITIAL_STATE })\r\n  }\r\n  render() {\r\n    const { name, number } = this.state\r\n\r\n    return (\r\n      <>\r\n        <form onSubmit={this.handleSubmit} className={style.form}>\r\n          <label>\r\n            <h2 className={style.title}>Name</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"name\"\r\n              placeholder=\"Enter name\"\r\n              value={name}\r\n              onChange={this.handleChange}\r\n              className={style.input}\r\n            />\r\n          </label>\r\n          <label>\r\n            <h2 className={style.title}>Phone</h2>\r\n            <input\r\n              type=\"text\"\r\n              name=\"number\"\r\n              placeholder=\"Enter phone\"\r\n              value={number}\r\n              onChange={this.handleChange}\r\n              className={style.input}\r\n            />\r\n          </label>\r\n          <button type=\"submit\" className={style.btn}>\r\n            {\" \"}\r\n            <span className={style.btnText}>add contact</span>\r\n          </button>\r\n        </form>\r\n        <CSSTransition in={this.state.isExists} timeout={250} classNames=\"alert\" unmountOnExit>\r\n          <AlertMessage>{\"Is already in contacts.\"}</AlertMessage>\r\n        </CSSTransition>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nconst mapStateToProps = (state, props) => ({\r\n  contacts: state.contacts,\r\n})\r\n\r\n// const mapDispatchToProps = ()=> ({\r\n//   addContact: (contact)=>{dispatch(addContact(contact))}\r\n// })\r\n\r\nconst mapDispatchToProps = { addContact }\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactForm)\r\n","import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport style from \"./Filter.module.css\"\r\nimport { connect } from \"react-redux\"\r\nimport { filterContact } from \"../../redux/actions/actions.js\"\r\nimport { CSSTransition } from \"react-transition-group\"\r\n\r\nfunction Filter({ filter, filterRender, visibleFilter }) {\r\n  return (\r\n    <CSSTransition in={!!visibleFilter} timeout={250} classNames={style.input} unmountOnExit>\r\n      <div className={style.container}>\r\n        <label>\r\n          <h2 className={style.title}>Find contact by name</h2>\r\n          <input\r\n            type=\"text\"\r\n            name=\"filter\"\r\n            placeholder=\"Finder\"\r\n            value={filter}\r\n            onChange={(e) => filterRender(e.target.value)}\r\n            className={style.input}\r\n          />\r\n        </label>\r\n      </div>\r\n    </CSSTransition>\r\n  )\r\n}\r\n\r\nFilter.propTypes = {\r\n  filter: PropTypes.string.isRequired,\r\n  filterRender: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  const { filter, contacts } = state\r\n\r\n  return {\r\n    filter: filter,\r\n    visibleFilter: contacts.length > 1,\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = {\r\n  filterRender: filterContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Filter)\r\n","import React from \"react\"\r\nimport { TransitionGroup, CSSTransition } from \"react-transition-group\"\r\nimport PropTypes from \"prop-types\"\r\nimport style from \"./ContactList.module.css\"\r\nimport { connect } from \"react-redux\"\r\n\r\nimport \"../../Container/animation/listAnimation.css\"\r\nimport { removeContact } from \"../../redux/actions/actions.js\"\r\n\r\nconst ContactList = ({ array, deleteItem }) => {\r\n  return (\r\n    <TransitionGroup component=\"ul\" className={style.list}>\r\n      {array.map((item) => (\r\n        <CSSTransition key={item.id} timeout={250} classNames=\"item\">\r\n          <li className={style.listItem} key={item.id}>\r\n            <span className={style.deskription}>{item.name}</span>\r\n            <span className={style.deskription}>{item.number}</span>\r\n            <button type=\"button\" onClick={() => deleteItem(item.id)} className={style.btn}>\r\n              <span className={style.btnText}>X</span>\r\n            </button>\r\n          </li>\r\n        </CSSTransition>\r\n      ))}\r\n    </TransitionGroup>\r\n  )\r\n}\r\n\r\nContactList.propTypes = {\r\n  array: PropTypes.arrayOf(\r\n    PropTypes.exact({\r\n      id: PropTypes.string,\r\n      name: PropTypes.string.isRequired,\r\n      number: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  deleteItem: PropTypes.func.isRequired,\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n  return { array: state.contacts.filter((contact) => contact.name.toLowerCase().includes(state.filter.toLowerCase())) }\r\n}\r\nconst mapDispatchToProps = {\r\n  deleteItem: removeContact,\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ContactList)\r\n","import React from 'react'\r\nimport style from './title.module.css'\r\n\r\nconst title = ({ title }) => {\r\n    return (\r\n        <h1 className={style.title}>{title}</h1>\r\n    )\r\n}\r\nexport default title","import React from \"react\"\nimport ContactForm from \"../Components/ContactForm/ContactForm.jsx\"\nimport Filter from \"../Components/Filter/Filter.jsx\"\nimport ContactList from \"../Components/ContactList/ContactList.jsx\"\nimport Title from \"../Components/Title/Title.js\"\n\nimport { CSSTransition } from \"react-transition-group\"\nimport animation from \"./animation/titleAnimation.module.css\"\nimport style from \"./App.module.css\"\n\nconst App = () => {\n  // state = {\n  //   contacts: [],\n  //   filter: \"\",\n  //   alertMessage: '',\n  // }\n\n  // componentDidMount() {\n  //   const contacts = JSON.parse(localStorage.getItem('Contacts'))\n  //   if (contacts) {\n  //      this.setState({contacts})\n  //   }\n  // }\n\n  // componentDidUpdate(prevProps, prevState) {\n  //   if (prevState.contacts !== this.state.contacts) {\n  //   localStorage.setItem('Contacts', JSON.stringify(this.state.contacts))\n  //   };\n  // }\n\n  // addContact = el => {\n  //   if (this.state.contacts.find(item => item.name === el.name)) {\n  //     this.setState({ alertMessage: 'Is already in contacts.' });\n  //     setTimeout(() => {\n  //       this.setState({ alertMessage: '' });\n  //     }, 1500);\n  //   } else {\n  //     // this.setState(prevState => {\n  //     //   const updateState = [...prevState.contacts, el];\n  //     //   return { contacts: updateState, alertMessage: '' };\n  //     // });\n  //     this.props.addContact(el)\n  //   }\n  // };\n\n  // getVisibleContact = () => {\n  //   const { contacts, filter } = this.state\n  //   return contacts.filter((contact) => contact.name.toLowerCase().includes(filter.toLowerCase()))\n  // }\n\n  // handleDelete = (id) => {\n  //   const { contacts } = this.state\n  //   const obj = contacts.find((el) => el.id === id)\n  //   const index = contacts.indexOf(obj)\n  //   this.setState((prevState) => ({\n  //     contacts: [...prevState.contacts.slice(0, index), ...prevState.contacts.slice(index + 1)],\n  //   }))\n  //   this.reset();\n  // }\n\n  //   reset = () => {\n  //   this.setState({ filter: '' });\n  // };\n\n  // filterRender = (filter) => {\n  //   this.setState({ filter })\n  // }\n\n  // render() {\n  // const { filter, contacts } = this.state\n  // const visibleContact = this.getVisibleContact()\n\n  return (\n    <>\n      <div className={style.container}>\n        <CSSTransition in={true} appear={true} classNames={animation} unmountOnExid timeout={500}>\n          <Title title=\"Phonebook\" />\n        </CSSTransition>\n        {/* <ContactForm addContact={this.addContact} /> */}\n        <ContactForm />\n        {/* {contacts.length > 1 && <Filter filter={filter} filterRender={this.filterRender} />} */}\n        <Filter />\n        {/* <ContactList array={visibleContact} deleteItem={this.handleDelete} /> */}\n        <ContactList />\n      </div>\n    </>\n  )\n  // }\n}\n\nexport default App\n","// Without Toolkit\r\n// //импортируем весь файл екшон и представляем его как обьект с именем екшонс\r\nimport shortid from \"short-id\"\r\n\r\n// import { ADD_CONTACT, REMOVE_CONTACT, CHANGE_FILTER } from \"../actionsTypes.js\"\r\n\r\n// //деструктуризируем наш обьект екшенов\r\n// import { combineReducers } from \"redux\"\r\n\r\nimport { createReducer } from \"@reduxjs/toolkit\"\r\nimport { addContact, removeContact, filterContact } from \"../actions/actions.js\"\r\n\r\n\r\nconst getStorageContacts = JSON.parse(localStorage.getItem(\"Contacts\")) || [\r\n  { id: \"id-1\", name: \"Rosie Simpson\", number: \"459-12-56\" },\r\n  { id: \"id-2\", name: \"Hermione Kline\", number: \"443-89-12\" },\r\n  { id: \"id-3\", name: \"Eden Clements\", number: \"645-17-79\" },\r\n  { id: \"id-4\", name: \"Annie Copeland\", number: \"227-91-26\" },\r\n]\r\n\r\nconst initialState = {\r\n  contacts: getStorageContacts,\r\n  filter: \"\",\r\n}\r\n\r\n// const contactsReducer = (state = initialState.contacts, { type, payload }) => {\r\n//   switch (type) {\r\n//     case ADD_CONTACT:\r\n//       return [...state, { ...payload, id: shortid.generate() }]\r\n//     case REMOVE_CONTACT:\r\n//       return state.filter((contact) => {\r\n//         return contact.id !== payload\r\n//       })\r\n\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// const filterReducer = (state = initialState.filter, { type, payload }) => {\r\n//   switch (type) {\r\n//     case CHANGE_FILTER:\r\n//       return payload\r\n//     default:\r\n//       return state\r\n//   }\r\n// }\r\n\r\n// export const rootReducer = combineReducers({\r\n//   contacts: contactsReducer,\r\n//   filter: filterReducer,\r\n// })\r\n\r\nconst createAddContact = (state, actions) => {\r\n  return [...state, { ...actions.payload, id: shortid.generate() }]\r\n}\r\n\r\nconst createRemoveContact = (state, actions) => {\r\n  return state.filter((contact) => {\r\n    return contact.id !== actions.payload\r\n  })\r\n}\r\n\r\nconst createContactsReducer = createReducer(initialState.contacts, {\r\n  [addContact]: createAddContact,\r\n  [removeContact]: createRemoveContact,\r\n})\r\n\r\nconst createFilterReducer = createReducer(initialState.filter, {\r\n  [filterContact]: (state, actions) => actions.payload,\r\n})\r\n\r\nexport { createContactsReducer, createFilterReducer }\r\n","// import { createStore } from 'redux'\r\n// import {rootReducer} from '../redux/reducers/reducer.js'\r\n// import {composeWithDevtools} from 'redux-devtools-extension'\r\n\r\nimport { configureStore } from \"@reduxjs/toolkit\"\r\nimport { createContactsReducer, createFilterReducer } from \"../redux/reducers/reducer.js\"\r\n\r\n// Without Toolkit\r\n// const store = createStore(rootReducer, composeWithDevtools, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n// export default store\r\n\r\nconst store = configureStore({\r\n  reducer: {\r\n    contacts: createContactsReducer,\r\n    filter: createFilterReducer,\r\n  },\r\n})\r\n\r\nstore.subscribe(() => {\r\n  localStorage.setItem(\"Contacts\", JSON.stringify(store.getState().contacts))\r\n})\r\n\r\nexport default store\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Container/App.js';\nimport {Provider} from 'react-redux'\nimport store from './redux/store.js'\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  // <React.StrictMode>\n    // <BrowserRouter>\n    // </BrowserRouter>\n  // {/* </React.StrictMode>, */}\n  document.getElementById(\"root\")\n)\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Filter_container__WSJQX\",\"title\":\"Filter_title__3lgVW\",\"input\":\"Filter_input__2ARyk\",\"input-appear\":\"Filter_input-appear__3aNm4\",\"input-appear-active\":\"Filter_input-appear-active__LX-ME\"};"],"sourceRoot":""}